(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{404:function(a,t,e){"use strict";e.r(t);var s=e(54),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"多页面如何实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多页面如何实现"}},[a._v("#")]),a._v(" 多页面如何实现")]),a._v(" "),e("ol",[e("li",[a._v("根据页面去划分整个项目")]),a._v(" "),e("li",[a._v("浏览器自身实现页面切换")]),a._v(" "),e("li",[a._v("页面跳转本质上是从服务端请求html")])]),a._v(" "),e("h2",{attrs:{id:"多页面的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多页面的特点"}},[a._v("#")]),a._v(" 多页面的特点")]),a._v(" "),e("ol",[e("li",[a._v("页面切换简单")]),a._v(" "),e("li",[a._v("对SEO搜索引擎优化较好")]),a._v(" "),e("li",[a._v("开发比较困难---难以实现模块化，应用入口多")])]),a._v(" "),e("h2",{attrs:{id:"单页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单页面"}},[a._v("#")]),a._v(" 单页面")]),a._v(" "),e("ol",[e("li",[a._v("通过js模拟页面的切换效果，并且与url地址栏挂钩")]),a._v(" "),e("li",[a._v("根据视图划分的应用")])]),a._v(" "),e("h2",{attrs:{id:"单页面的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单页面的特点"}},[a._v("#")]),a._v(" 单页面的特点")]),a._v(" "),e("ol",[e("li",[a._v("对seo搜索引擎不太友好")]),a._v(" "),e("li",[a._v("所有的视图和逻辑，仅仅使用一个页面完成")]),a._v(" "),e("li",[a._v("开发相对简单（应用入口只有一个）")])]),a._v(" "),e("h2",{attrs:{id:"前端开发的痛点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端开发的痛点"}},[a._v("#")]),a._v(" 前端开发的痛点")]),a._v(" "),e("ol",[e("li",[a._v("开发时模块化不好处理")]),a._v(" "),e("li",[a._v("需要处理的文件类型很多（js,css,html,图片）")]),a._v(" "),e("li",[a._v("需要考虑部署在服务器，以及运行在浏览器的问题")])]),a._v(" "),e("h2",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[a._v("#")]),a._v(" webpack")]),a._v(" "),e("ol",[e("li",[a._v("认为所有的前端资源都是模块")]),a._v(" "),e("li",[a._v("所有的静态资源都可以使用commonjs模块化的方式进行组织")]),a._v(" "),e("li",[a._v("提供了可以把任意资源转换成js的能力")]),a._v(" "),e("li",[a._v("可以把所有的模块按照引用逻辑组织在一个文件（js），供浏览器使用")])]),a._v(" "),e("h2",{attrs:{id:"前端框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端框架"}},[a._v("#")]),a._v(" 前端框架")]),a._v(" "),e("p",[a._v("VUE：尤雨溪 2014年开发的前端框架 MVVM 学习成本低 数据的双向绑定 React：Facebook推出的前端框架 使用jsX 一切以js为核心 Angular：谷歌推出的前端框架 google维护的 功能复杂，学习路线陡峭")]),a._v(" "),e("h2",{attrs:{id:"mvvm和-mvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm和-mvc"}},[a._v("#")]),a._v(" MVVM和 MVC")]),a._v(" "),e("h3",{attrs:{id:"mvc开发模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc开发模式"}},[a._v("#")]),a._v(" MVC开发模式")]),a._v(" "),e("p",[a._v("M：model模型 V：View视图 C：Controller控制器 view层接受用户动作，传递指令给controller controller完成业务逻辑，要求Model改变状态 model将新的数据发送给View，用户得到了反馈")]),a._v(" "),e("h3",{attrs:{id:"mvvm开发模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm开发模式"}},[a._v("#")]),a._v(" MVVM开发模式")]),a._v(" "),e("p",[a._v("M：model模型 V：View视图 VM：ViewModel（视图模型） Controller修改为ViewModel")]),a._v(" "),e("p",[a._v("view层接受用户请求：DOM事件，AJax ViewModel监听View的请求和model层的数据状态变化 ViewModel和model 进行了数据的双向绑定，model层监听ViewModel的变化")]),a._v(" "),e("h2",{attrs:{id:"虚拟dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom"}},[a._v("#")]),a._v(" 虚拟DOM")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("createElement()\n添加（innerHTML，attrs，Eventes）\nappenChild()\n")])])]),e("h2",{attrs:{id:"definepropty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#definepropty"}},[a._v("#")]),a._v(" definePropty")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("   Object.defineProperty(data, 'a', {\n    // configurable: true   不能被delete删除 默认是false\n    // enumerable: true   是否可以枚举 遍历 for in\n    // value: 1 \n    // writable: true   属性是不是只读\n\n    // get set方法不能和 writable 、 value 同时出现\n    // get() {\n    //     // 监听到data.a被访问 该函数执行，\n    //     // data.a的值是该函数的返回值\n    // },\n    // set(value) {\n    // 只要监听到data.a被修改 执行该函数\n    // 参数：参数就是设置的值\n    // }\n})\n")])])]),e("h2",{attrs:{id:"数据驱动视图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据驱动视图"}},[a._v("#")]),a._v(" 数据驱动视图")]),a._v(" "),e("h2",{attrs:{id:"vue的基础指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue的基础指令"}},[a._v("#")]),a._v(" vue的基础指令")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("在模版中可以直接访问data和methods中的内容，必须是通过指令的方式\n指令的值可以是js的表达式\n")])])]),e("h3",{attrs:{id:"v-html"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-html"}},[a._v("#")]),a._v(" v-html")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("绑定data中的值到标签的innerHTML中 简写{{可以是任意的表达式}}\n")])])]),e("h3",{attrs:{id:"v-text"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-text"}},[a._v("#")]),a._v(" v-text")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("基本上和v-html一样，会把标签字符串原样输出\n")])])]),e("h3",{attrs:{id:"v-bind"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-bind"}},[a._v("#")]),a._v(" v-bind")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("把标签中的属性和data中的数据进行绑定  简写 ：\n")])])]),e("h3",{attrs:{id:"v-on"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-on"}},[a._v("#")]),a._v(" v-on")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("绑定事件 v-on:事件名称=方法名称  \n简写 @事件名=方法名\n")])])]),e("h3",{attrs:{id:"v-if-v-else-v-else-if"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-if-v-else-v-else-if"}},[a._v("#")]),a._v(" v-if v-else v-else-if")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("根据指令值（boolean），控制载体的加载与卸载 v-esle 配合v-if\n")])])]),e("h3",{attrs:{id:"v-show"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-show"}},[a._v("#")]),a._v(" v-show")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("和v-if机制一样 如果指令的值是false会给标签添加一个display：none来控制元素是否隐藏\n")])])]),e("h3",{attrs:{id:"v-for"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-for"}},[a._v("#")]),a._v(" v-for")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("循环结构，循环的是他的载体已经所有后代\nObject.keys()\n")])])]),e("h3",{attrs:{id:"v-model"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[a._v("#")]),a._v(" v-model")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("数据双向绑定\n语法糖   v-on：input   和   v-bind：value的语法糖\n")])])]),e("h3",{attrs:{id:"⭐v-for-和v-if-的优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⭐v-for-和v-if-的优先级"}},[a._v("#")]),a._v(" ⭐v-for 和v-if 的优先级")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("v-for优先级高，不建议放在同一个标签（组件）上使用\n先循环所有的组件之后，再进行判断，会造成性能浪费\n解决办法：\n    1. 可以使用计算属性来实现（先处理数据，再渲染）\n    2. 可以将 v-if 置于外层元素 (或 <template>) 上\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);