(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{405:function(t,a,e){"use strict";e.r(a);var s=e(54),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),e("h2",{attrs:{id:"组件-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件-2"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),e("p",[t._v("Vue中的组件化开发就是把网页重复的代码抽离出来，封装成一个个可以复用的组件，然后将这些视图组件拼接在一起就构成了我们的一个完整的应用")]),t._v(" "),e("h2",{attrs:{id:"组件的组成部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件的组成部分"}},[t._v("#")]),t._v(" 组件的组成部分")]),t._v(" "),e("p",[t._v("组件就是对局部视图的封装")]),t._v(" "),e("ul",[e("li",[t._v("html")]),t._v(" "),e("li",[t._v("css")]),t._v(" "),e("li",[t._v("js\n"),e("ul",[e("li",[t._v("data")]),t._v(" "),e("li",[t._v("methods")])])])]),t._v(" "),e("h2",{attrs:{id:"全局注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局注册"}},[t._v("#")]),t._v(" 全局注册")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('全局组件\nVue.component("ComponentGlobal", {\n    // 一个组件内只能由一个根节点\n    template: `<div><h1 @click="check">头部组件-{{name}}-{{index}}</h1><h1 @click="check">头部组件-{{name}}-{{index}}</h1></div>`,\n    data() {\n        return {\n            name: "全局组件",\n            index: 0\n        }\n    },\n    methods: {\n        check() {\n            this.index++\n        }\n    }\n})\n')])])]),e("h2",{attrs:{id:"局部注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#局部注册"}},[t._v("#")]),t._v(" 局部注册")]),t._v(" "),e("p",[t._v("// 局部组件 const localComponent = { template: "),e("code",[t._v("<div><h1>"+t._s(t.massage)+"</h1></div>")]),t._v(', data() { return { massage: "局部组件" } }, methods: {} }')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('new Vue({\n    el: "#app",\n    data: {\n        arr: [1, 2, 3, 4, 5, 6, 7]\n    },\n    components: {\n        "local-component": localComponent\n    }\n})\n')])])]),e("h4",{attrs:{id:"⭐全局组件和局部组件的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#⭐全局组件和局部组件的区别"}},[t._v("#")]),t._v(" ⭐全局组件和局部组件的区别：")]),t._v(" "),e("p",[t._v("​\t "),e("strong",[t._v("全局组件和局部组件的区别就是，局部组件只需要在vue实例上面挂载，而全局组件需要写在Vue.component('组件名称',{配置项})方法上面")])]),t._v(" "),e("h2",{attrs:{id:"组件化注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件化注意事项"}},[t._v("#")]),t._v(" 组件化注意事项")]),t._v(" "),e("ol",[e("li",[t._v("组件命名规范")]),t._v(" "),e("li",[t._v("组件内部的template必须只有一个根节点")]),t._v(" "),e("li",[e("strong",[t._v("⭐组件的data必须是一个函数，并且函数体返回一个对象，每个组件都可以维护一个对象的独立拷贝，如果没有这条规则的话，操作数据会影响所有的组件实例")])]),t._v(" "),e("li",[t._v("组件可以理解为一个特殊的vue实例，不需要手动实例化，只管理自己的template模版")]),t._v(" "),e("li",[t._v("组件与组件之间是互相独立的，可以配置自己的一些配置项 data ， methods， 等等")]),t._v(" "),e("li",[t._v("思想： 组件自己管理自己，不影响别人")])]),t._v(" "),e("h2",{attrs:{id:"组件化的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件化的问题"}},[t._v("#")]),t._v(" 组件化的问题")]),t._v(" "),e("ol",[e("li",[t._v("全局定义的组件要求组件名称不能重复")]),t._v(" "),e("li",[t._v("字符串模版缺乏语法高亮，在html多行的时候写起来很麻烦")]),t._v(" "),e("li",[t._v("不支持css")]),t._v(" "),e("li",[t._v("模块化问题：commonjs 和 ESmodules")])]),t._v(" "),e("h2",{attrs:{id:"cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[t._v("#")]),t._v(" Cli")]),t._v(" "),e("p",[t._v("全局安装 npm install vue -g npm install vue-cli -g")]),t._v(" "),e("p",[t._v("初始化项目 vue init webpack 项目名称")]),t._v(" "),e("p",[t._v("启动项目 npm run dev")])])}),[],!1,null,null,null);a.default=n.exports}}]);